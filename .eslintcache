[{"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/index.js":"1","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/App/App.js":"2","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/util.js":"3","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Header/Header.js":"4","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/MovieDetails/MovieDetails.js":"5","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Footer/Footer.js":"6","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Error/Error.js":"7","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/SearchBar/SearchBar.js":"8","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/ReRoute/ReRoute.js":"9","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Movies/Movies.js":"10","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Movie/Movie.js":"11","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/SortDropDown/SortDropDown.js":"12","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Favorites/Favorites.js":"13"},{"size":268,"mtime":1613083559859,"results":"14","hashOfConfig":"15"},{"size":5074,"mtime":1613421300477,"results":"16","hashOfConfig":"15"},{"size":733,"mtime":1613415471358,"results":"17","hashOfConfig":"15"},{"size":807,"mtime":1613411603339,"results":"18","hashOfConfig":"15"},{"size":2572,"mtime":1613174946177,"results":"19","hashOfConfig":"15"},{"size":244,"mtime":1613164986318,"results":"20","hashOfConfig":"15"},{"size":605,"mtime":1613415300496,"results":"21","hashOfConfig":"15"},{"size":667,"mtime":1613411245176,"results":"22","hashOfConfig":"15"},{"size":310,"mtime":1613083559856,"results":"23","hashOfConfig":"15"},{"size":1066,"mtime":1613419027625,"results":"24","hashOfConfig":"15"},{"size":1280,"mtime":1613415658971,"results":"25","hashOfConfig":"15"},{"size":990,"mtime":1613419306809,"results":"26","hashOfConfig":"15"},{"size":652,"mtime":1613411603337,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"j099g4",{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/index.js",[],["60","61"],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/App/App.js",["62","63","64","65","66","67"],"import './App.scss'\nimport React, { Component } from 'react'\nimport Movies from '../Movies/Movies'\nimport Header from '../Header/Header'\nimport Footer from '../Footer/Footer'\nimport MovieDetails from '../MovieDetails/MovieDetails'\nimport Error from '../Error/Error'\nimport SearchBar from '../SearchBar/SearchBar'\nimport SortDropDown from '../SortDropDown/SortDropDown'\nimport Favorites from '../Favorites/Favorites'\nimport ReRoute from '../ReRoute/ReRoute'\nimport { getAllMovies, getSingleMovie, getSingleMovieVideo, getFavorites, updateFavorites } from '../../util'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = { \n      movies: {movies: []},\n      currentMovie: null,\n      errorStatus: null,\n      error: '',\n      isLoading: true,\n      searchResults: null,\n      favoritedIds: null,\n      favoritedMovies: null,\n      favoritesPage: false,\n      triggerDropDown: false\n     }\n  }\n\n  componentDidMount = () => {\n    let responseStatus\n    let allMovies\n    let favorites\n    return Promise.all([getAllMovies(), getFavorites()])\n      .then(responses => {\n        responseStatus = [responses[0].status, responses[1].status]\n        return Promise.all(responses.map(response => response.json()))\n      })\n      .then(responses => {\n        allMovies = responses[0]\n        favorites = responses[1]\n        console.log(allMovies)\n        this.setState({ movies: allMovies.movies, favoritedIds: favorites.ids, isLoading: false })\n      })\n      .then(this.findFavorites)\n      .catch(error => {\n        console.log('Movies Request Failed', error)\n        const filteredResponses = responseStatus.filter(status => status > 299)\n        this.setState({ error: error, errorStatus: Number(filteredResponses) })\n    })\n  }\n\n  getSingleMovieData = (id) => {\n    this.setState({ isLoading: true })\n    let movie\n    let videos\n    let responseStatus\n    return Promise.all([getSingleMovie(id), getSingleMovieVideo(id)])\n      .then(responses => {\n        responseStatus = [responses[0].status, responses[1].status]\n        return Promise.all(responses.map(response => response.json()))\n      })\n      .then(responses => {\n        movie = responses[0]\n        videos = responses[1]\n        this.setState({ currentMovie: [movie.movie, videos.videos], isLoading: false })\n      })\n      .catch(error => {\n        console.log('Movies Request Failed', error)\n        const filteredResponses = responseStatus.filter(status => status > 299)\n        this.setState({ error: error, errorStatus: Number(filteredResponses) })\n    })\n  }\n  \n  triggerDropDown = () => {\n    this.setState({ triggerDropDown: true })\n  }\n\n  sortByRatings = () => {\n    const sortedMovies = this.state.movies.sort((a,b) => {\n      return b.average_rating - a.average_rating\n    })\n    return sortedMovies\n  }\n\n  filterMovies = (input) => {\n    const filteredMovies = this.state.movies.filter(movie => {\n      const upperCaseTitle = movie.title.toUpperCase()\n      return upperCaseTitle.includes(input.toUpperCase())\n    })\n    this.setState({ searchResults: [...filteredMovies] })\n    console.log(this.state.searchResults)\n  }\n\n  toggleFavoritesPage = () => {\n    this.setState({ favoritesPage: true })\n  }\n\n  findFavorites = () => {\n    this.setState({ isLoading: true })\n    let favoriteMovies = []\n    return this.state.favoritedIds.forEach(id => {\n       const foundMovies = this.state.movies.filter(movie => {\n        if(movie.id === id.favoritedId) {\n         return favoriteMovies.push(movie)\n       } \n      })\n      this.setState({favoritedMovies: favoriteMovies, isLoading: false})\n    })\n  }\n\n\n  render() {\n    return (\n      <div className='App'>\n\n        <div className='searchContainer'>\n          <SearchBar movies={this.state.movies} filterMovies={this.filterMovies}/>\n          <SortDropDown triggerDropDown={this.triggerDropDown} triggerDropDownState={this.state.triggerDropDown} sortByRatings={this.sortByRatings}/>\n        </div>\n\n        <Header toggleFavoritesPage={this.toggleFavoritesPage}/>\n\n        {this.state.error && (\n        <Error error={this.state.error} errorStatus={this.state.errorStatus}/>\n        )}\n\n        <Switch>\n        < Route \n          exact\n          path='/' \n          render={()=> <Movies movies={this.state.movies} searchResults={this.state.searchResults} getSingleMovieData={this.getSingleMovieData} isLoading={this.state.isLoading} favoritedMovies={this.state.favoritedMovies} favoritesPage={this.state.favoritesPage} triggerDropDown={this.state.triggerDropDown}/>}\n          />\n\n        < Route \n          exact\n          path='/favorites'\n          render={()=> <Favorites favoritedMovies={this.state.favoritedMovies}/>}/>\n\n        < Route \n           exact\n           path='/:id'\n           render={ ( { match }) => {\n             const { id } = match.params\n             return <MovieDetails currentMovie={this.state.currentMovie} isLoading={this.state.isLoading} />\n           }}/>\n\n        </Switch>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App\n","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/util.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Header/Header.js",["68"],"import React from 'react'\nimport './Header.scss'\nimport reelzLogo from '../../images/movieTicket.png'\nimport { NavLink } from 'react-router-dom'\n\nconst Header = ({toggleFavoritesPage}) => {\n\n    // const toggleFavoritesPage = () => {\n    //   console.log(favoritesPage)\n    //  return favoritesPage = false\n    // }\n    return (\n      <header className='text'>\n        {/* <Link className='headerLink' to='/'>\n          <img className='headerImg' src={reelzLogo} alt='Reelz Logo'/>\n        </Link> */}\n        <NavLink className='favoritesPage' to='/favorites' onClick={toggleFavoritesPage}>\n          View Favorites\n          {/* <img className='headerImg' src={reelzLogo} alt='Reelz Logo'/> */}\n        </NavLink>\n          <h1 className='shadows'>Reelz</h1>\n      </header>\n    )\n}\n\nexport default Header","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/MovieDetails/MovieDetails.js",["69"],"import React from 'react'\nimport './MovieDetails.scss'\nimport X from '../../images/cancel.png'\nimport star from '../../images/favourites.png'\nimport { Link } from 'react-router-dom'\n\n\nconst MovieDetails = ({currentMovie, isLoading}) => {\n\n  const convertToCurrency = (num) => {\n    return num.toLocaleString('EN-US', {style: 'currency', currency: 'USD'})\n  }\n\n  const returnMovieTrailers = () => {\n    return currentMovie[1].map(video => {\n       return <iframe src={`https://www.youtube.com/embed/${video.key}`} title={video.title} key={video.id}></iframe>\n     })\n   }\n  \n  return ( \n    isLoading \n    ? \n    <div className=\"loadingScreen\"><h2>Loading...</h2></div> \n    : \n    <main className='main'>\n      <img className='backdrop' src={currentMovie[0].backdrop_path} alt={`${currentMovie[0].title} image`}/>\n      <div className='detailsWrapper'>\n\n        <section className='detailsContainer'>\n          <div className='btnWrapper'>\n            <Link to='/'>\n              <img className='cancelImg' src={X} alt='exit-details'/>\n            </Link>\n          </div>\n          \n          <div className='txtContainer'>\n            <h1 className='title'>{currentMovie[0]\n            .title}</h1>\n            <div className='dateContainer'>\n              <p className='bold'>Release Date: <br/>\n              {currentMovie[0].release_date} \n              </p>\n              <p className='bold'>Average Rating: <br/>\n               {currentMovie[0].average_rating.toFixed(1)}\n                <img className='starImg' src={star} alt='star-icon'/>\n              </p>\n              <p className='bold'>Runtime: <br/>\n              {currentMovie[0].runtime} minutes\n              </p>\n            </div>\n        \n            <p className='genre'>{currentMovie[0].genres.join(' | ')}</p> \n            \n            <p className='overview'>{currentMovie[0].overview}</p>\n            \n              {currentMovie[0].budget === 0 ? \n\n              <p className='money'>Budget: <br/> $0</p> :\n              <p className='money'>Budget: <br/> {convertToCurrency(currentMovie[0].budget)}</p>\n              }\n\n              {currentMovie[0].revenue === 0 ?\n              <p className='money'>Revenue: <br/> $0</p> :\n              <p className='money'>Revenue: <br/> {convertToCurrency(currentMovie[0].revenue)}</p>\n              } \n            \n          </div>\n        </section>\n        {currentMovie[1].length ? \n        <div className='videoContainer'>\n          {returnMovieTrailers()}\n        </div> :\n        <></>}\n      </div>\n    </main>\n  )\n}\n\nexport default MovieDetails","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Footer/Footer.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Error/Error.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/SearchBar/SearchBar.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/ReRoute/ReRoute.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Movies/Movies.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Movie/Movie.js",["70","71"],"import React from 'react'\nimport './Movie.scss'\nimport { Link } from 'react-router-dom'\nimport star from '../../images/favourites.png'\nimport plus from '../../images/plus (1).svg'\nimport emptyHeart from '../../images/heart (1).svg'\nimport filledHeart from '../../images/like.svg'\n\n\nconst Movie = ({average_rating, title, image, id, getSingleMovieData}) => {\n\n  const starCount = () => {\n    const roundedNumber = Math.round(average_rating.toFixed(1))\n    const starElements = Array(roundedNumber).fill(star)\n    const createStars = starElements.map(star => {\n      return (\n        <img className='starCountImg' src={star} alt='star-icon'/>\n      )\n    })\n    return createStars\n  }\n    return (\n        <section key={id} className='cardContainer'>\n      \n          <div className='plusWrapper'>\n            <img className='plusIcon' src={emptyHeart} alt='add to favorites'/>\n          </div>\n      \n          <article key={id} className='movieCard'>\n          <Link className='movieLink' to={`/${id}`} onClick={() => getSingleMovieData(id)}>\n            <img className='cardImage' src={image} alt={title}/>\n          </Link>\n          </article>\n          <p className='stars'>\n            {starCount()}\n          </p>\n        </section>\n\n      \n    )\n  }\n\nexport default Movie  ","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/SortDropDown/SortDropDown.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Favorites/Favorites.js",["72"],"import React from 'react'\nimport './Favorites.scss'\nimport Movie from '../Movie/Movie'\n\nconst Favorites = ({favoritedMovies}) => {\n  \n  console.log(favoritedMovies)\n  // const buildMovieCard = () => {\n  // return favoritedMovies.map(movie => {\n  //     return (\n  //       <Movie\n  //         image={movie.poster_path}\n  //         id={movie.id}\n  //         title={movie.title}\n  //         average_rating={movie.average_rating}\n  //         key={movie.id}\n  //       />\n  //     )\n  //  })\n  // }\n\n\n\n  \n  return (\n    \n     <section className='favoritesContainer'>\n       {/* {buildMovieCard()} */}\n     </section>\n   \n  )\n}\n\nexport default Favorites",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":11,"column":8,"nodeType":"79","messageId":"80","endLine":11,"endColumn":15},{"ruleId":"77","severity":1,"message":"81","line":12,"column":75,"nodeType":"79","messageId":"80","endLine":12,"endColumn":90},{"ruleId":"77","severity":1,"message":"82","line":13,"column":10,"nodeType":"79","messageId":"80","endLine":13,"endColumn":18},{"ruleId":"77","severity":1,"message":"83","line":105,"column":14,"nodeType":"79","messageId":"80","endLine":105,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":105,"column":59,"nodeType":"86","messageId":"87","endLine":105,"endColumn":61},{"ruleId":"77","severity":1,"message":"88","line":146,"column":22,"nodeType":"79","messageId":"80","endLine":146,"endColumn":24},{"ruleId":"77","severity":1,"message":"89","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":26,"column":7,"nodeType":"92","endLine":26,"endColumn":109},{"ruleId":"77","severity":1,"message":"93","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":12},{"ruleId":"77","severity":1,"message":"94","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":19},{"ruleId":"77","severity":1,"message":"95","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":13},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'ReRoute' is defined but never used.","Identifier","unusedVar","'updateFavorites' is defined but never used.","'Redirect' is defined but never used.","'foundMovies' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'id' is assigned a value but never used.","'reelzLogo' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'plus' is defined but never used.","'filledHeart' is defined but never used.","'Movie' is defined but never used.","no-global-assign","no-unsafe-negation"]