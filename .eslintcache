[{"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/index.js":"1","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/App/App.js":"2","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Footer/Footer.js":"3","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/util.js":"4","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Movies/Movies.js":"5","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Header/Header.js":"6","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/MovieDetails/MovieDetails.js":"7","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Movie/Movie.js":"8"},{"size":549,"mtime":1612833591030,"results":"9","hashOfConfig":"10"},{"size":2552,"mtime":1612833591027,"results":"11","hashOfConfig":"10"},{"size":160,"mtime":1612472199719,"results":"12","hashOfConfig":"10"},{"size":1156,"mtime":1612732784253,"results":"13","hashOfConfig":"10"},{"size":607,"mtime":1612821354297,"results":"14","hashOfConfig":"10"},{"size":301,"mtime":1612642565229,"results":"15","hashOfConfig":"10"},{"size":2226,"mtime":1612833591029,"results":"16","hashOfConfig":"10"},{"size":421,"mtime":1612833591028,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"j099g4",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/index.js",["38","39"],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/App/App.js",["40"],"import './App.scss'\nimport React, { Component } from 'react'\nimport Movies from '../Movies/Movies'\nimport Header from '../Header/Header'\nimport Footer from '../Footer/Footer'\nimport MovieDetails from '../MovieDetails/MovieDetails'\nimport { getAllMovies, getSingleMovie, getSingleMovieVideo } from '../../util'\nimport { Route } from 'react-router-dom'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = { \n      movies: [],\n      currentMovie: '',\n      error: '',\n      isLoading: true\n     }\n  }\n\n  componentDidMount = () => {\n    getAllMovies()     \n      .then(movies => {\n        console.log('Movies Request Successful', movies)\n        this.setState({ movies: movies, isLoading: false })\n      })\n      .catch(error => {\n        console.log('Movies Request Failed', error)\n        this.setState({ error: \"Oops! Something went wrong!\" })\n      })\n  }\n\n  handleClick = (id) => {\n    const current = this.state.movies.movies.find(movie => movie.id === id)\n    this.getSingleMovieData(current.id)\n    // getSingleMovie(current.id)\n    //   .then(movie => this.setState({currentMovie: movie}))\n  }\n\n  getSingleMovieData = (id) => {\n    const selectedMovieDetails = getSingleMovie(id)\n    const selectedMovieVideos = getSingleMovieVideo(id)\n    return Promise.all([selectedMovieDetails, selectedMovieVideos])\n      .then(movie => {\n        this.setState({ currentMovie: [movie[0], movie[1]] })\n      })\n  }\n\n  exitDetails = () => {\n    this.setState({currentMovie: ''})\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Header />\n          {/* <Route exact path=\"/\" \n            render={() => \n              <section className='main'>\n                < Movies movies={this.state.movies} handleClick={this.handleClick}/>\n              </section>\n            }/> */}\n\n        {this.state.isLoading && !this.state.error &&\n        ( <h2 className=\"userMsg\">Loading...</h2> )}\n\n        {this.state.error && (\n          <h2 className=\"userMsg\">{this.state.error}</h2>\n        )}\n        \n        {!this.state.isLoading && !this.state.currentMovie && (\n        <Movies movies={this.state.movies} handleClick={this.handleClick}/>\n        )}\n        {/* <Route \n          exact\n          path='/' \n          render={() => <Movies movies={this.state.movies} handleClick={this.handleClick}/> } \n        /> */}\n        {this.state.currentMovie && (\n        <MovieDetails currentMovie={this.state.currentMovie} exitDetails={this.exitDetails}/>\n        )}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n",["41","42"],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Footer/Footer.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/util.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Movies/Movies.js",["43","44","45"],"import React from 'react'\nimport './Movies.scss'\nimport Movie from '../Movie/Movie'\nimport { getAllMovies, getSingleMovie, getSingleMovieVideo } from '../../util'\n\nconst Movies = ({movies, handleClick}) => {\n  const movieCards = movies.movies.map(movie => {\n    return (\n      <Movie \n        image={movie.poster_path}\n        // title={movie.title}\n        // tagline={movie.tagline}\n        id={movie.id}\n        key={movie.id}\n        handleClick={handleClick}\n      />\n    )\n  })\n\n    return(\n      <section className='moviesContainer'>\n        {movieCards}\n      </section>\n  )\n}\n\nexport default Movies","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Header/Header.js",[],"/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/MovieDetails/MovieDetails.js",["46","47"],"import React from 'react'\nimport './MovieDetails.scss'\nimport {  getSingleMovie, getSingleMovieVideo } from '../../util'\n\nconst MovieDetails = ({currentMovie, exitDetails}) => {\n\n\n  const convertToCurrency = (num) => {\n    return num.toLocaleString('EN-US', {style: 'currency', currency: 'USD'})\n  }\n\n  const returnMovieTrailers = () => {\n    const test =  currentMovie[1].videos.map(video => {\n      return <iframe src={`https://www.youtube.com/embed/${video.key}`} title={currentMovie[0].movie.title}></iframe>\n    })\n    return test\n  }\n\n \n  return (\n    <main>\n      <img className=\"backdrop\" src={currentMovie[0].movie.backdrop_path} alt=\"\"/>\n      <div className=\"detailsWrapper\">\n        <section className='detailsContainer'>\n          <div className=\"btnWrapper\">\n            <button onClick={exitDetails}>X</button>\n          </div>\n          <div className='txtContainer'>\n            <h1 className='title'>{currentMovie[0].movie.title}</h1>\n            <div className='dateContainer'>\n              <p className='bold'>Release Date: <br/>\n              {currentMovie[0].movie.release_date} \n              </p>\n              <p className='bold'>Average Rating: <br/>\n               {currentMovie[0].movie.average_rating.toFixed(1)}\n              </p>\n              <p className='bold'>Runtime: <br/>\n              {currentMovie[0].movie.runtime} minutes\n              </p>\n            </div>\n            <p className='overview'>{currentMovie[0].movie.overview}</p>\n\n            {currentMovie[0].movie.genres.length > 1 ? \n            <p>Genres: {currentMovie[0].movie.genres.join(', ')}</p> : \n            <p>Genre: {currentMovie[0].movie.genres}</p>}\n\n            {currentMovie[0].movie.budget === 0 ? \n            <p>Budget: $0</p> :\n            <p>Budget: {convertToCurrency(currentMovie[0].movie.budget)}</p>\n            }\n\n            {currentMovie[0].movie.revenue === 0 ?\n            <p>Revenue: $0</p> :\n            <p>Revenue: {convertToCurrency(currentMovie[0].movie.revenue)}</p>\n            } \n          </div>\n        </section>\n        <div className=\"videoContainer\">\n          {returnMovieTrailers()}\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default MovieDetails","/Users/rachelbuchta/turing/mod3/projects/rancid-tomatillos/rancidTomatillos/src/Components/Movie/Movie.js",[],{"ruleId":"48","severity":1,"message":"49","line":10,"column":35,"nodeType":"50","messageId":"51","endLine":10,"endColumn":40},{"ruleId":"48","severity":1,"message":"52","line":10,"column":42,"nodeType":"50","messageId":"51","endLine":10,"endColumn":48},{"ruleId":"48","severity":1,"message":"53","line":83,"column":21,"nodeType":"50","messageId":"51","endLine":83,"endColumn":23},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"48","severity":1,"message":"58","line":4,"column":10,"nodeType":"50","messageId":"51","endLine":4,"endColumn":22},{"ruleId":"48","severity":1,"message":"59","line":4,"column":24,"nodeType":"50","messageId":"51","endLine":4,"endColumn":38},{"ruleId":"48","severity":1,"message":"60","line":4,"column":40,"nodeType":"50","messageId":"51","endLine":4,"endColumn":59},{"ruleId":"48","severity":1,"message":"59","line":3,"column":11,"nodeType":"50","messageId":"51","endLine":3,"endColumn":25},{"ruleId":"48","severity":1,"message":"60","line":3,"column":27,"nodeType":"50","messageId":"51","endLine":3,"endColumn":46},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'id' is assigned a value but never used.","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'getAllMovies' is defined but never used.","'getSingleMovie' is defined but never used.","'getSingleMovieVideo' is defined but never used.","no-global-assign","no-unsafe-negation"]